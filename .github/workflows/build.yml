name: Build release
run-name: Build binaries and cut a release

on:
  push:
    branches: [ "master", "buildaction" ]
    tags: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - name: Get short SHA
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 go build .
      - name: Pack release files
        run: zip -r release.zip netplay-lobby-server-go netplay-lobby-server-go.service web geoip2
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: netplay-lobby-server-go-linux64-${{ steps.slug.outputs.sha8 }}
          path: |
            netplay-lobby-server-go
            netplay-lobby-server-go.service
            web/*
            geoip2/*

      - name: Get release version
        id: tagversion
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          fullref="${{ github.ref }}"
          tagversion=${fullref#"refs/tags/"}
          echo "tagversion=${tagversion}" >> $GITHUB_OUTPUT
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tagversion.outputs.tagversion }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: netplay-lobby-server-go-linux64-${{ steps.tagversion.outputs.tagversion }}.zip
          asset_content_type: application/zip

